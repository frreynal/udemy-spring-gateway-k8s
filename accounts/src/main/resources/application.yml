# pour le eureka dashboard
info:
  app:
    name: "accounts"
    description: "Eazy Bank Accounts Application"
    version: "1.0.0"

server:
  port: 8080
spring:
  application:
    name: accounts # sert aussi pour le nom d'enregistrement d'eureka
  profiles:
    active: "prod"
  datasource:
    url: jdbc:mysql://localhost:3306/accountsdb
    username: root
    password: root
  jpa:
    show-sql: false
  sql:
    init:
      mode: always

  config:
    import: "optional:configserver:http://localhost:8071/"

  rabbitmq:
    host: "localhost"
    port: 5672
    username: "guest"
    password: "guest"

  cloud:
    openfeign:
      circuitbreaker:
        enabled: true

    function:
      definition: updateCommunication
    stream:
      bindings:
        updateCommunication-in-0:
          destination: communication-sent
          group: ${spring.application.name}
        sendCommunication-out-0:
          destination: send-communication

  metrics:
    tags:
      application: ${spring.application.name} # nom pour grouper toutes les métriques prom

management:
  endpoints:
    web:
      exposure:
        include: "*"
  # pour eureka
  endpoint:
    shutdown:
      enabled: true
  info:
    env:
      enabled: true

endpoints:  # pour exposer l'api de shutdown pour eureka
  shutdown:
    enabled: true

eureka:
  instance:
    preferIpAddress: true # les services se reconnaissent par ip car pas de dns
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/



logging:
  level:
    org.springframework.cloud.netflix.eureka: debug
    com.eazybytes: DEBUG
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"

resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 2
      failureRateThreshold: 50 # % de requêtes en échec avant de passer à open
      waitDurationInOpenState: 10000 # (ms) attente avant de passer de open à half-open

resilience4j.retry:
  configs:
    default:
      maxAttempts: 3
      waitDuration: 700
      enableExponentialBackoff: true
      exponentialBackoffMultiplier: 2
      ignoreExceptions:
        - java.lang.NullPointerException
#      retryExceptions:  on met soit retry soit ignoreException
#        - java.util.concurrent.TimeoutException


resilience4j.ratelimiter:
  configs:
    default:
      timeoutDuration: 5000ms
      limitRefreshPeriod: 5000ms
      limitForPeriod: 3
