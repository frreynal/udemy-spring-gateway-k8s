
spring:
  application:
    name: "gatewayserver"
  config:
    import: "optional:configserver:http://localhost:8071/"
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lowerCaseServiceId: true
      httpclient:
        connect-timeout: 1000
        response-timeout: 10s
  data:
    redis:
      connect-timeout: 2s
      host: localhost
      port: 6379
      timeout: 1s
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: "http://localhost:7080/realms/master/protocol/openid-connect/certs"


management: # actuator
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    gateway:
      enabled: true
  info:
    env:
      enabled: true

eureka:
  instance:
    preferIpAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/

resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 2
      failureRateThreshold: 50 # % de requêtes en échec avant de passer à open
      waitDurationInOpenState: 10000 # (ms) attente avant de passer de open à half-open
    accountsCircuitBreaker:
      slidingWindowSize: 6
      permittedNumberOfCallsInHalfOpenState: 2
      failureRateThreshold: 45 # % de requêtes en échec avant de passer à open
      waitDurationInOpenState: 10000 # (ms) attente avant de passer de open à half-open
resilience4j.timelimiter:
  configs:
    groupC:
      timeoutDuration: 3s
      cancelRunningFuture: true

info:
  app:
    name: "gatewayserver"
    description: "Eazy Bank Gateway Server Application"
    version: "1.0.0"

logging:
  level:
    com:
      eazybytes:
        gatewayserver: DEBUG
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"

otel:
  sdk:
    disabled: true

