spring:
  application:
    name: "eurekaserver"
  config:
    import: "optional:configserver:http://localhost:8071/"

management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readinessstate:
      enabled: true
    livenessstate:
      enabled: true
  endpoint:
    health:
      probes:
        enabled: true

eureka:
  instance:
    hostname: localhost
#    ip-address: 127.0.0.1
    prefer-ip-address: false
    lease-expiration-duration-in-seconds: 10 # (90) Indicates the time in seconds that the eureka server waits since it received the last heartbeat before it can remove this instance from its view and there by disallowing traffic to this instance. Setting this value too long could mean that the traffic could be routed to the instance even though the instance is not alive. Setting this value too small could mean, the instance may be taken out of traffic because of temporary network glitches.This value to be set to atleast higher than the value specified in leaseRenewalIntervalInSeconds.
    lease-renewal-interval-in-seconds: 5 #(30) Indicates how often (in seconds) the eureka client needs to send heartbeats to eureka server to indicate that it is still alive. If the heartbeats are not received for the period specified in leaseExpirationDurationInSeconds, eureka server will remove the instance from its view, there by disallowing traffic to this instance. Note that the instance could still not take traffic if it implements HealthCheckCallback and then decides to make itself unavailable.
  client:
    fetchRegistry: false # ce n'est pas eureka qui va fetcher les détails dans le registre pour les autres ms, ce sont les ms eux mêmes qui le feront
    # le serveur eureka n'appelera jamais les micro services
    registerWithEureka: false # on ne veut pas que eureka s'enregistre lui-même
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/
#      defaultZone: ${eureka.instance.ip-address}:${server.port}/eureka/

logging:
  level:
    org.springframework.cloud.netflix.eureka.server: debug
    org.springframework.cloud.commons.util.InetUtils: trace

